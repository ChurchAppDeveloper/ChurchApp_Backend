package com.church.barnabas.entity;
// Generated 8 May, 2021 6:19:11 PM by Hibernate Tools 5.0.6.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;

/**
 * UserAnnouncement generated by hbm2java
 */
@Entity
@Table(name = "user_announcement", catalog = "churchapp", uniqueConstraints = @UniqueConstraint(columnNames = "title"))
public class UserAnnouncement implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer id;
	private UserTable userTable;
	private String title;
	private String description;
	private String filename;
	private boolean status;
	private boolean readStatus;
	@Temporal(TemporalType.DATE)
	@Column(nullable = false)
	private java.util.Date createdDate = new java.util.Date(System.currentTimeMillis());

	
	private Set<UserAnnouncementNotifyCount> userAnnouncementNotifyCount = new HashSet<UserAnnouncementNotifyCount>(0);

	public UserAnnouncement() {
	}

	public UserAnnouncement(UserTable userTable) {
		this.userTable = userTable;
	}

	public UserAnnouncement(UserTable userTable, String title, String description, String filename, boolean status,
			Set<UserAnnouncementNotifyCount> userAnnouncementNotifyCount) {
		super();
		this.userTable = userTable;
		this.title = title;
		this.description = description;
		this.filename = filename;
		this.status = status;
		this.userAnnouncementNotifyCount = userAnnouncementNotifyCount;
		
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JsonIgnore
	@JoinColumn(name = "user_table_id", nullable = false)
	public UserTable getUserTable() {
		return this.userTable;
	}

	public void setUserTable(UserTable userTable) {
		this.userTable = userTable;
	}

	@Column(name = "title", unique = true)
	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	@Column(name = "description")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "filename")
	public String getFilename() {
		return this.filename;
	}

	public void setFilename(String filename) {
		this.filename = filename;
	}

	@Column(name = "status",nullable = true)
	public boolean isStatus() {
		return status;
	}

	public void setStatus(boolean status) {
		this.status = status;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userAnnouncement")
	@JsonIgnore
	public Set<UserAnnouncementNotifyCount> getUserAnnouncementNotifyCount() {
		return this.userAnnouncementNotifyCount;
	}

	public void setUserAnnouncementNotifyCount(Set<UserAnnouncementNotifyCount> userAnnouncementNotifyCount) {
		this.userAnnouncementNotifyCount = userAnnouncementNotifyCount;
	}

	@JsonInclude()
	@Transient
	public boolean isReadStatus() {
		return readStatus;
	}

	public void setReadStatus(boolean readStatus) {
		this.readStatus = readStatus;
	}

	public java.util.Date getCreatedDate() {
		return createdDate;
	}

	public void setCreatedDate(java.util.Date createdDate) {
		this.createdDate = createdDate;
	}

	
	

}
